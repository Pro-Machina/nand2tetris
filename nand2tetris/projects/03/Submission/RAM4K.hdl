// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=loadReg1, b=loadReg2, c=loadReg3, d=loadReg4, e=loadReg5, f=loadReg6, g=loadReg7, h=loadReg8);
    RAM512(in=in, load=loadReg1, address=address[0..8], out=outReg1);
    RAM512(in=in, load=loadReg2, address=address[0..8], out=outReg2);
    RAM512(in=in, load=loadReg3, address=address[0..8], out=outReg3);
    RAM512(in=in, load=loadReg4, address=address[0..8], out=outReg4);
    RAM512(in=in, load=loadReg5, address=address[0..8], out=outReg5);
    RAM512(in=in, load=loadReg6, address=address[0..8], out=outReg6);
    RAM512(in=in, load=loadReg7, address=address[0..8], out=outReg7);
    RAM512(in=in, load=loadReg8, address=address[0..8], out=outReg8);
    Mux8Way16(a=outReg1, b=outReg2, c=outReg3, d=outReg4, e=outReg5, f=outReg6, g=outReg7, h=outReg8, sel=address[9..11], out=out);
}